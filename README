The repo contains the primary data used in Leutwyler and Hohenegger 2020, QJ.


CODE
===

For the particular version of COSMO, we would like to thank the Federal Office of Meteorology and Climatology MeteoSwiss, the Centre for Climate Systems Modeling (C2SM) and ETH Zurich. In particular, we would like to acknowledge Linda Schlemmer for providing us with an initial set of code modifications for using COSMO in an RCE configuration. COSMO may be used for operational and for research applications by the members of the COSMO consortium. Moreover, within a license agreement, the COSMO model may be used for operational and research applications by other national (hydro-)meteorological services, universities, and research institutes. The particular version of the COSMO model used in this study is based on the official version 5.0 with many additions to enable GPU capability. It is available under a license (\url{http://www.cosmo-model.org/content/consortium/licencing.htm}.

The modifications to run COSMO in RCE, following Wing et al (2017) are listed in: rce_diff.diff

SIMULATIONS
==========

config: The configuration as run for 10LAND ensemble 0 (as an example). To generate the other ensemble members the value for iseed_noise_t in INPUT_IDEAL was changed.

FR_LAND: The employed land masks
profiles: The initial conditions for the atmosphere


ANALYSIS
========

The analysis contains two parts: A set of bash scripts driving CDO 1.9.5 commands and Jupiter notebooks

The CDO commands are organized using bash scripts, and are submitted to a compute node by submit_analysis.sh. The do the following:
  - concatenate NetCDF files: analysis_CDO/merge.sh and analysis_CDO/merge_3D.sh 
  - domain-mean timeseries: analysis_CDO/compute_fldmean.sh 
  - condidtional timeseries: analysis_CDO/compute_fldmean_lnd.sh
  - Ensmeble mean for the last 50 days: analysis_CDO/compute_ensmean.sh -> 3D fields
  - Precipitation statistics: analysis_CDO/precip_stats.sh

    Some of the fields were plotted using NCL 6.4: Fig. 1 and Fig 2 (plot_NCL)

The more complex analysis and the plots were done in Python 3.6.5.7 using Jupyter notebooks:
  - The employed Python packages include:
    matplotlib v. 3.1.1, xarray v. 0.12.2, numpy 1.15.1, skimage 0.15.0, scipy v. 1.1.0

  - analysis_jptr/Diurnal_Cycles.ipynb: Fig. 2
  - analysis_jptr/T500_and_profiles.ipynb: Fig 5, Fig 6
  - analysis_jptr/wet-day_frequency_wet_dry.ipynb: Tab 2
  - analysis_jptr/LCL_Bolton.ipynb: Fig. 7, Tab. 3
  - analysis_jptr/LCL_stats_ALL_SMALL.ipynb: Fig 8, SI Fig. 4 
  - analysis_jptr/Dependence_on_island_size.ipynb; SI Fig. 2, SI FIg. 3

    Note that the nomenclature of the experiments is different: ALL -> 10LAND, SMALL -> 5LAND
    
    
FIGRUES
=======

The plots obtained from matplotlib and NCL were post-processed in Inkscape v. 0.95. The software was used to arrange all panels and make fonts, labels, and line colors consistent.
